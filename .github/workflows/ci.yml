name: CI Pipeline

on:
  push:
    branches: [ "main","CI-test2"]
  pull_request:
    branches: [ "main" ,"CI-test2"]

jobs:
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: mediflow_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'code/backend/package-lock.json'

      - name: Install dependencies
        working-directory: ./code/backend
        run: npm ci

      - name: Create test environment
        working-directory: ./code/backend
        run: |
          echo "NODE_ENV=test" > .env
          echo "DB_HOST=postgres" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_USER=test_user" >> .env
          echo "DB_PASSWORD=test_password" >> .env
          echo "DB_NAME=mediflow_test" >> .env
          echo "JWT_SECRET=test_secret" >> .env
          echo "AWS_IOT_ENDPOINT=https://test-iot-endpoint.iot.us-east-1.amazonaws.com" >> .env
          echo "AWS_REGION=us-east-1" >> .env
          echo "AWS_ACCESS_KEY_ID=test_key" >> .env
          echo "AWS_SECRET_ACCESS_KEY=test_secret" >> .env

      - name: Run tests
        working-directory: ./code/backend
        run: npm test

      - name: Upload coverage
        if: github.event_name != 'act'
        uses: codecov/codecov-action@v4
        with:
          file: ./code/backend/coverage/lcov.info
          flags: backend

  frontend:
    name: Frontend Build & Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'code/frontend/package-lock.json'

      - name: Install dependencies
        working-directory: ./code/frontend
        run: npm ci

      - name: Type check
        working-directory: ./code/frontend
        run: npx tsc --noEmit

      - name: Build
        working-directory: ./code/frontend
        run: npm run build

      - name: Upload build artifacts
        if: github.event_name != 'act'
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: code/frontend/dist/
